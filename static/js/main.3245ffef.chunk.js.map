{"version":3,"sources":["Flashcard/Flashcard.js","Flashcard/Flashcardlist.js","Navigation/button.js","Navigation/Home.js","Navigation/Topnav.js","App.js","index.js"],"names":["Flashcard","flashcard","useState","flip","setflip","className","onClick","question","options","map","option","answer","maxval","Math","max","apply","book1","o","Lesson","Flashcardlist","props","myid","setmyid","urlid","id","console","log","filteredArray","filter","obj","SampleFlashcard","flashcards","setflashcards","useEffect","questionItem","index","English","Arabic","Button","Home","color","text","hello","style","Mystyling","defaultProps","Topnav","to","exact","path","MedinaArabic","Topics","Child","useRouteMatch","Listnav","useParams","list","link","i","push","href","match","url","Topic","topicId","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3245ffef.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function Flashcard({ flashcard }) {\r\n  const [flip, setflip] = useState(false);\r\n  return (\r\n    <div\r\n      className={`card ${flip ? \"flip\" : \"\"}`}\r\n      onClick={() => setflip(!flip)}\r\n    >\r\n      <div className=\"front\">\r\n        {flashcard.question}\r\n        <div className=\"flashcard-options\">\r\n          {flashcard.options.map((option) => {\r\n            return <div className=\"flashcard-option\">{option}</div>;\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div className=\"back\">{flashcard.answer}</div>\r\n      {/* {flip ? flashcard.answer : flashcard.question} */}\r\n    </div>\r\n  );\r\n}\r\n","import Flashcard from \"./Flashcard\"\r\nimport book1 from \"../book1.json\"\r\nimport React, { useState, useEffect } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\n\r\nconst maxval = Math.max.apply(\r\n  Math,\r\n  book1.map(function (o) {\r\n    return o.Lesson\r\n  })\r\n)\r\nexport default function Flashcardlist(props) {\r\n  // console.log(\"hello\")\r\n  // console.log(myuserid)\r\n  let [myid, setmyid] = useState(1)\r\n  const NextLesson = () => {\r\n    if (myid < maxval) {\r\n      setmyid(myid + 1)\r\n    } else {\r\n    }\r\n    // Flashcardlist()\r\n  }\r\n  const PreviousLesson = () => {\r\n    if (myid > 1) {\r\n      setmyid(myid - 1)\r\n    } else {\r\n    }\r\n  }\r\n\r\n  if (props.urlid == true && myid != props.id) {\r\n    setmyid(myid + 1)\r\n  }\r\n  console.log(\"First\", myid)\r\n  let filteredArray = book1.filter((obj) => obj.Lesson === myid)\r\n  // .map((obj) => obj.id)\r\n\r\n  const [flashcards, setflashcards] = useState(SampleFlashcard)\r\n  useEffect(() => {\r\n    setflashcards(\r\n      filteredArray.map((questionItem, index) => {\r\n        const answer = questionItem.English\r\n        // multiple choice options\r\n        // const option = [questionItem.Arabic, questionItem.English]\r\n        return {\r\n          id: `${index}`,\r\n          question: questionItem.Arabic,\r\n          answer: answer,\r\n          options: [],\r\n        }\r\n      })\r\n    )\r\n  }, [myid])\r\n\r\n  // console.log(props.id)\r\n  // console.log(filteredArray)\r\n  return (\r\n    <>\r\n      <button onClick={PreviousLesson}>Previous</button>\r\n      <button onClick={NextLesson}>Next</button>\r\n      <h1>\r\n        Lesson {myid} / {props.id}\r\n      </h1>\r\n      {/* <Testing id={myid} /> */}\r\n      <div className=\"card-grid\">\r\n        {flashcards.map((flashcard) => {\r\n          return <Flashcard flashcard={flashcard} key={flashcard.id} />\r\n        })}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst SampleFlashcard = [\r\n  {\r\n    id: 1,\r\n    question: \"what is 2 + 3\",\r\n    answer: \"4\",\r\n    options: [\"2\", \"3\", \"4\", \"5\"],\r\n  },\r\n  {\r\n    id: 2,\r\n    question: \"question 2\",\r\n    answer: \"answer\",\r\n    options: [\"answer\", \"3\", \"4\", \"5\"],\r\n  },\r\n]\r\n","import React from \"react\"\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <div>\r\n      <button onClick={onClick}>Click</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Button\r\n","import React from \"react\"\r\nimport \"../index.css\"\r\nimport Button from \"./button.js\"\r\n\r\n// props do not need to be sent when called  <Home />\r\nconst Home = ({ color, text }) => {\r\n  let hello = 5\r\n  const onClick = () => {\r\n    return\r\n    hello += 1\r\n  }\r\n  return (\r\n    <div>\r\n      {/* // CSS-1-- Inline */}\r\n      <h4 style={{ color: \"red\" }}>{text}</h4>\r\n      {/* // CSS-2-- Internal */}\r\n      <h5 style={Mystyling}>{text}</h5>\r\n      <p>{hello}</p>\r\n      <Button onClick={onClick} />\r\n    </div>\r\n  )\r\n}\r\n\r\n// You may set default values to props\r\nHome.defaultProps = {\r\n  color: \"blue\",\r\n  text: \"Default text\",\r\n}\r\n\r\nconst Mystyling = {\r\n  color: \"#d37f46\",\r\n}\r\n\r\nexport default Home\r\n","import React from \"react\"\r\nimport { Link, Switch, Route, useRouteMatch, useParams } from \"react-router-dom\"\r\nimport Flashcardlist from \"../Flashcard/Flashcardlist.js\"\r\nimport Home from \"./Home.js\"\r\nimport styled from \"styled-components\"\r\n\r\n// const Container = styled.div`\r\n//   background: darkred;\r\n//   /* make this a fixed navbar at the top, with fixed height */\r\n//   position: fixed;\r\n//   top: 0;\r\n//   right: 0;\r\n//   left: 0;\r\n//   height: 64px;\r\n//   /* add a nice shadow effect */\r\n//   z-index: 1;\r\n//   box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\r\n//   /* center the inner container */\r\n//   display: flex;\r\n//   justify-content: center;\r\n// `\r\n\r\n// const Content = styled.div`\r\n//   background: red;\r\n\r\n//   /* layout children horizontally */\r\n//   display: flex;\r\n//   justify-content: space-between;\r\n//   /* as wide as it can be, but not too wide */\r\n//   width: 100%;\r\n//   max-width: 480px;\r\n// `\r\n\r\n// const SideNav = styled.div`\r\n//   background: yellow;\r\n//   /* always show on mobile but can be tucked away;\r\n//      fixed width and add transition */\r\n//   display: block;\r\n//   width: 300px;\r\n//   transition: left 200ms ease-in-out;\r\n//   /* set it on the side */\r\n//   position: fixed;\r\n//   top: 0;\r\n//   bottom: 0;\r\n//   left: ${(p) => (p.show ? `0` : `-100%`)};\r\n//   /* hide on larger screens */\r\n//   @media screen and (min-width: 600px) {\r\n//     display: none;\r\n//   }\r\n// `\r\n\r\n// const Logo = styled.div``\r\n\r\n// const TopNav = styled.div`\r\n//   display: none;\r\n//   /* show on larger screens */\r\n//   @media screen and (min-width: 600px) {\r\n//     display: block;\r\n//   }\r\n// `\r\n\r\n// const MobileMenuButton = styled.div`\r\n//   display: block;\r\n//   padding: 6px;\r\n//   border: 2px solid white;\r\n//   /* hide on larger screens */\r\n//   @media screen and (min-width: 600px) {\r\n//     display: none;\r\n//   }\r\n// `\r\n\r\nexport default function Topnav() {\r\n  return (\r\n    <>\r\n      <nav className=\"topnav\">\r\n        <Link className=\"navitem\" to=\"/\">\r\n          Home\r\n        </Link>\r\n        <Link className=\"navitem\" to=\"/Medina-arabic\">\r\n          Medina Arabic\r\n        </Link>\r\n        <Link className=\"navitem\" to=\"/topics\">\r\n          Topics\r\n        </Link>\r\n      </nav>\r\n\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route exact path=\"/Medina-arabic\">\r\n          <MedinaArabic />\r\n        </Route>\r\n        <Route path=\"/topics\">\r\n          <Topics />\r\n        </Route>\r\n        <Route path=\"/Medina-arabic/:id\">\r\n          <Child />\r\n        </Route>\r\n      </Switch>\r\n      {/* <button onClick={() => setmyid(myid + 1)}>Click</button> */}\r\n    </>\r\n  )\r\n}\r\n\r\n// function Home() {\r\n//   return (\r\n//     <>\r\n//       <h2>Home</h2>\r\n//     </>\r\n//   )\r\n// }\r\n\r\nfunction MedinaArabic() {\r\n  let match = useRouteMatch()\r\n  return (\r\n    <>\r\n      <Switch></Switch>\r\n      <main>\r\n        <Listnav />\r\n        <div className=\"content\">\r\n          <h2>MedinaArabic</h2>\r\n          <div className=\"container\">\r\n            <Flashcardlist urlid={false} />\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction Child() {\r\n  let { id } = useParams()\r\n  //   return <Flashcardlist id={id} />\r\n  return (\r\n    <main className=\"\">\r\n      <Listnav />\r\n      <div className=\"content\">\r\n        <h1>Book 1</h1>\r\n        <Flashcardlist id={id} urlid={true} />\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nfunction Listnav() {\r\n  const list = []\r\n  const urlid = useParams()\r\n  console.log(urlid)\r\n  let link = \"\"\r\n  for (let i = 1; i < 24; i++) {\r\n    link = \"/Medina-arabic/\" + i\r\n    if (urlid.id == i) {\r\n      list.push(\r\n        <a className=\"active\" href={link}>\r\n          Lesson {i}\r\n        </a>\r\n      )\r\n    } else {\r\n      list.push(<a href={link}>Lesson {i}</a>)\r\n    }\r\n  }\r\n  return <nav className=\"sidebar\">{list}</nav>\r\n}\r\n// //////////////////////////////////////////////////////////\r\n// // //////////////////////////////////////////////////////////\r\n// //////////////////////////////////////////////////////////\r\n//////////////////////////////////////////////////////////\r\n//////////////////////////////////////////////////////////\r\n//////////////////////////////////////////////////////////\r\n//////////////////////////////////////////////////////////\r\n//////////////////////////////////////////////////////////\r\n//////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n//////////////////////////////////////////////////////////\r\n\r\nfunction Topics() {\r\n  let match = useRouteMatch()\r\n  return (\r\n    <div>\r\n      <h2>Topics</h2>\r\n      <ul>\r\n        <li>\r\n          <Link to={`${match.url}/React`}>Components</Link>\r\n        </li>\r\n        <li>\r\n          <Link to={`${match.url}/props-v-state`}>Props v. State</Link>\r\n        </li>\r\n      </ul>\r\n\r\n      {/* The Topics page has its own <Switch> with more routes\r\n            that build on the /topics URL path. You can think of the\r\n            2nd <Route> here as an \"index\" page for all topics, or\r\n            the page that is shown when no topic is selected */}\r\n      <Switch>\r\n        <Route path={`${match.path}/:topicId`}>\r\n          <Topic />\r\n        </Route>\r\n        <Route path={match.path}>\r\n          <h3>Please select a topic.</h3>\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Topic() {\r\n  let { topicId } = useParams()\r\n  return <h3>Requested topic ID: {topicId}</h3>\r\n}\r\n","// import React, { useState, useEffect } from \"react\"\nimport React from \"react\"\n// import Flashcardlist from \"./Flashcard/Flashcardlist.js\"\nimport Topnav from \"./Navigation/Topnav.js\"\nimport \"./index.css\"\n// import { BrowserRouter as Router, Switch, Route, Link, useRouteMatch, useParams } from \"react-router-dom\"\nimport styled from \"styled-components\"\n\n// const Container = styled.nav`\n//   background: darkred;\n//   /* make this a fixed navbar at the top, with fixed height */\n//   position: fixed;\n//   top: 0;\n//   right: 0;\n//   left: 0;\n//   height: 64px;\n//   /* add a nice shadow effect */\n//   z-index: 1;\n//   box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n//   /* center the inner container */\n//   display: flex;\n//   justify-content: center;\n// `\n\nfunction App() {\n  return (\n    // <Container>\n    <Topnav />\n    // </Container>\n  )\n  // return <Mydata />\n}\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}