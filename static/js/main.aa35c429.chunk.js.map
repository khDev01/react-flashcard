{"version":3,"sources":["Flashcard/Flashcard.js","Flashcard/Flashcardlist.js","Navigation/Home.js","Navigation/Topics.js","Navigation/SideNav.js","Navigation/Flip.js","Navigation/Btnchangelesson.js","Flashcard/book2list.js","Flashcard/book3list.js","Navigation/Topnav.js","App.js","index.js"],"names":["Flashcard","flashcard","useState","flip","setflip","className","onClick","question","options","map","option","index","answer","Math","max","apply","book1","o","Lesson","Flashcardlist","props","myid","setmyid","urlid","id","filteredArray","filter","obj","SampleFlashcard","flashcards","setflashcards","useEffect","questionItem","English","Arabic","book","Home","color","text","style","Mystyling","defaultProps","Topic","topicId","useParams","Topics","match","useRouteMatch","listItems","mytopic","to","url","path","SideNav","page","Listnav","list","myroute","mybooklink","includes","maxlessons","link","i","push","parseInt","Flip","interval","setInterval","clearInterval","cardstyle","width","gap","Btnchangelesson","intid","lessontochange","strintnext","undefined","strintprev","endsWith","book2","Book2list","book3","Book3list","Topnav","exact","MedinaArabic","Child","Child2","Child3","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa35c429.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\n\r\nexport default function Flashcard({ flashcard }) {\r\n  const [flip, setflip] = useState(false)\r\n\r\n  // useEffect(() => {\r\n  //   const interval = setInterval(() => {\r\n  //     if (flip === true) {\r\n  //       setflip(false)\r\n  //     } else {\r\n  //       setflip(true)\r\n  //     }\r\n  //   }, 2300)\r\n  //   return () => clearInterval(interval)\r\n  // }, [flip])\r\n\r\n  return (\r\n    <div className={`card ${flip ? \"flip\" : \"\"}`} onClick={() => setflip(!flip)}>\r\n      <div className=\"front\">\r\n        {flashcard.question}\r\n        <div className=\"flashcard-options\">\r\n          {flashcard.options.map((option, index) => {\r\n            return (\r\n              <div key={index} className=\"flashcard-option\">\r\n                {option}\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div className=\"back\">{flashcard.answer}</div>\r\n      {/* {flip ? flashcard.answer : flashcard.question} */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// function tick() {\r\n//   return <h1>hello</h1>\r\n// }\r\n\r\n// setInterval(tick, 1000)\r\n","import Flashcard from \"./Flashcard\"\r\nimport book1 from \"../book1.json\"\r\nimport book2 from \"../lesson2.json\"\r\nimport book3 from \"../lesson3.json\"\r\n\r\nimport React, { useState, useEffect } from \"react\"\r\n// import { useParams } from \"react-router-dom\"\r\n\r\nconst maxval = Math.max.apply(\r\n  Math,\r\n  book1.map(function (o) {\r\n    return o.Lesson\r\n  })\r\n)\r\nexport default function Flashcardlist(props) {\r\n  // console.log(props)\r\n  let [myid, setmyid] = useState(1)\r\n  // const NextLesson = () => {\r\n  //   if (myid < maxval) {\r\n  //     setmyid(myid + 1)\r\n  //   } else {\r\n  //   }\r\n  //   // Flashcardlist()\r\n  // }\r\n  // const PreviousLesson = () => {\r\n  //   if (myid > 1) {\r\n  //     setmyid(myid - 1)\r\n  //   } else {\r\n  //   }\r\n  // }\r\n\r\n  if (props.urlid === true && myid !== props.id) {\r\n    setmyid(props.id)\r\n  }\r\n  let filteredArray = book1.filter((obj) => obj.Lesson === myid)\r\n  // .map((obj) => obj.id)\r\n\r\n  const [flashcards, setflashcards] = useState(SampleFlashcard)\r\n  useEffect(() => {\r\n    // console.log(\"Sectond\", myid)\r\n    setflashcards(\r\n      filteredArray.map((questionItem, index) => {\r\n        const answer = questionItem.English\r\n        // multiple choice options\r\n        // const option = [questionItem.Arabic, questionItem.English]\r\n        return {\r\n          id: `${index}`,\r\n          question: questionItem.Arabic,\r\n          answer: answer,\r\n          options: [],\r\n        }\r\n      })\r\n    )\r\n  }, [myid])\r\n\r\n  // console.log(props.id)\r\n  // console.log(filteredArray)\r\n  return (\r\n    <>\r\n      {/* <button onClick={PreviousLesson}>Previous</button>\r\n      <button onClick={NextLesson}>Next</button> */}\r\n      <h1>\r\n        {/* Lesson {myid} / {props.id} */}\r\n        Lesson {myid}\r\n      </h1>\r\n      {/* <Testing id={myid} /> */}\r\n      <div className=\"card-grid\">\r\n        {flashcards.map((flashcard) => {\r\n          return <Flashcard flashcard={flashcard} book={\"bookNumber\"} key={flashcard.id} />\r\n        })}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst SampleFlashcard = [\r\n  {\r\n    id: 1,\r\n    question: \"what is 2 + 3\",\r\n    answer: \"4\",\r\n    options: [\"2\", \"3\", \"4\", \"5\"],\r\n  },\r\n  {\r\n    id: 2,\r\n    question: \"question 2\",\r\n    answer: \"answer\",\r\n    options: [\"answer\", \"3\", \"4\", \"5\"],\r\n  },\r\n]\r\n","import React from \"react\"\r\nimport \"../index.css\"\r\n// import Button from \"./button.js\"\r\n\r\n// props do not need to be sent when called  <Home />\r\nconst Home = ({ color, text }) => {\r\n  let hello = 5\r\n  // const onClick = () => {\r\n  //   return\r\n  //   hello += 1\r\n  // }\r\n  return (\r\n    <div>\r\n      {/* // CSS-1-- Inline */}\r\n      <h4 style={{ color: \"red\" }}>{text}</h4>\r\n      {/* // CSS-2-- Internal */}\r\n      <h5 style={Mystyling}>{text}</h5>\r\n      <p>{hello}</p>\r\n      {/* <Button onClick={onClick} /> */}\r\n    </div>\r\n  )\r\n}\r\n\r\n// You may set default values to props\r\nHome.defaultProps = {\r\n  color: \"blue\",\r\n  text: \"Default text\",\r\n}\r\n\r\nconst Mystyling = {\r\n  color: \"#d37f46\",\r\n}\r\n\r\nexport default Home\r\n","import React from \"react\"\r\nimport { Link, Switch, Route, useRouteMatch, useParams } from \"react-router-dom\"\r\n\r\nconst Topics = () => {\r\n  let match = useRouteMatch()\r\n  const myTopics = [\"Salah\", \"Dua\", \"Quran\", \"Muslim\", \"Prophets\", \"Seerah\", \"Maths\"]\r\n  const listItems = myTopics.map((mytopic) => (\r\n    <Link className=\"navitem\" to={`${match.url}/${mytopic}`}>\r\n      {mytopic}\r\n    </Link>\r\n  ))\r\n  return (\r\n    <div>\r\n      <div className=\"sidebar\">{listItems}</div>\r\n      <div className=\"content\">\r\n        <h2>Topics</h2>\r\n        {/* <ul>\r\n        <li>\r\n          <Link to={`${match.url}/React`}>Components</Link>\r\n        </li>\r\n        <li>\r\n          <Link to={`${match.url}/props-v-state`}>Props v. State</Link>\r\n        </li>\r\n      </ul> */}\r\n\r\n        {/* The Topics page has its own <Switch> with more routes\r\n            that build on the /topics URL path. You can think of the\r\n            2nd <Route> here as an \"index\" page for all topics, or\r\n            the page that is shown when no topic is selected */}\r\n        <Switch>\r\n          <Route path={`${match.path}/:topicId`}>\r\n            <Topic />\r\n          </Route>\r\n          <Route path={match.path}>\r\n            <h3>Please select a topic.</h3>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Topic() {\r\n  let { topicId } = useParams()\r\n  return <h3>Requested topic ID: {topicId}</h3>\r\n}\r\n\r\nexport default Topics\r\n","import React from \"react\"\r\nimport { Link, useParams, useRouteMatch } from \"react-router-dom\" //Switch, Route, useRouteMatch,\r\n// import Flashcardlist from \"../Flashcard/Flashcardlist.js\"\r\n// import Home from \"./Home.js\"\r\n\r\nexport default function SideNav({ page }) {\r\n  return (\r\n    <>\r\n      <Listnav page={page}></Listnav>\r\n    </>\r\n  )\r\n}\r\n\r\n// function MedinaArabic() {\r\n//   let match = useRouteMatch()\r\n//   return (\r\n//     <>\r\n//       <Switch></Switch>\r\n//       <main>\r\n//         <Listnav />\r\n//         <div className=\"content\">\r\n//           <h2>MedinaArabic</h2>\r\n//           <div className=\"container\">\r\n//             <Flashcardlist urlid={false} />\r\n//           </div>\r\n//         </div>\r\n//       </main>\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// function Child() {\r\n//   let { id } = useParams()\r\n//   //   return <Flashcardlist id={id} />\r\n//   return (\r\n//     <main className=\"\">\r\n//       <Listnav />\r\n//       <div className=\"content\">\r\n//         <h1>Book 1</h1>\r\n//         <Flashcardlist id={id} urlid={true} />\r\n//       </div>\r\n//     </main>\r\n//   )\r\n// }\r\n\r\nfunction Listnav({ page }) {\r\n  const list = []\r\n  const hello = \"hello\"\r\n  //   console.log(hello.includes(\"elp\"))\r\n  const myroute = useRouteMatch()\r\n  const mybooklink = myroute.url.includes(\"book2\")\r\n    ? \"/Medina-arabic/book2/\"\r\n    : myroute.url.includes(\"book3\")\r\n    ? \"/Medina-arabic/book3/\"\r\n    : \"/Medina-arabic/book1/\"\r\n  const maxlessons = myroute.url.includes(\"book2\") ? 26 : myroute.url.includes(\"book3\") ? 34 : 24\r\n  const urlid = useParams()\r\n  //   console.log(urlid)\r\n  let link = \"\"\r\n  if (page === \"main\") {\r\n    for (let i = 1; i < 4; i++) {\r\n      link = \"/Medina-arabic/book\" + i + \"/1\"\r\n      list.push(<Link to={link}>Book {i}</Link>)\r\n    }\r\n  } else {\r\n    for (let i = 1; i <= maxlessons; i++) {\r\n      link = \"/Medina-arabic/book1/\" + i\r\n      if (parseInt(urlid.id) === i) {\r\n        list.push(\r\n          <Link key={i} className=\"active\" to={mybooklink + i + \"/\"}>\r\n            Lesson {i}\r\n          </Link>\r\n        )\r\n      } else {\r\n        list.push(<Link to={mybooklink + i + \"/\"}>Lesson {i}</Link>)\r\n      }\r\n    }\r\n  }\r\n\r\n  return <nav className=\"sidebar\">{list}</nav>\r\n}\r\n","import React, { useState, useEffect } from \"react\"\r\n\r\nfunction Flip(props) {\r\n  const [flip, setflip] = useState(false)\r\n  // console.log(props)\r\n  // Flip card at every interval\r\n  useEffect(() => {\r\n    // setInterval(run code , time.ms)\r\n    const interval = setInterval(() => {\r\n      if (flip === true) {\r\n        setflip(false)\r\n        // console.log(flip)\r\n      } else {\r\n        setflip(true)\r\n        // console.log(flip)\r\n      }\r\n    }, 1000)\r\n    // Makes sure interval only runs on first mount, works as componentWillUnmount\r\n    return () => clearInterval(interval)\r\n  }, [flip])\r\n  return (\r\n    <div className=\"card-gridstst\">\r\n      <div className={`card ${flip ? \"flip\" : \"\"}`} style={cardstyle}>\r\n        <div className=\"front\">{props.question}</div>\r\n        <div className=\"back\">{props.answer}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nFlip.defaultProps = {\r\n  question: \"front\",\r\n  answer: \"back\",\r\n}\r\n\r\nconst cardstyle = {\r\n  color: \"#d37f46\",\r\n  // display: \"grid\",\r\n  width: \"20vw\",\r\n  \"align-items\": \"center\",\r\n  \"grid-template-columns\": \"repeat(auto-fill, minmax(200px, 1fr))\",\r\n  gap: \"1rem\",\r\n}\r\nexport default Flip\r\n","import React from \"react\"\r\nimport { Link, Switch, Route, useRouteMatch, useParams } from \"react-router-dom\"\r\n\r\nconst Btnchangelesson = () => {\r\n  let { id } = useParams()\r\n  let intid = parseInt(id)\r\n  let match = useRouteMatch()\r\n  const lessontochange = match.url.includes(\"book2\") ? \"book2\" : match.url.includes(\"book3\") ? \"book3\" : \"book1\"\r\n\r\n  //   let strintnext = id === undefined ? 1 : 1\r\n  //   let strintprev = id === undefined ? 1 : 1\r\n  let strintnext = id == undefined ? 1 : intid < 23 ? intid + 1 : intid\r\n  let strintprev = id == undefined ? 1 : intid > 1 ? intid - 1 : intid\r\n  //   if (id == undefined) {\r\n  //     strintnext = 1\r\n  //     strintprev = 1\r\n  //   }\r\n  if (match.url.endsWith(\"/Medina-arabic\")) {\r\n    return (\r\n      <>\r\n        <div>\r\n          <Link className=\"btngroup\" to=\"/Medina-arabic/book1/1\">\r\n            book1\r\n          </Link>\r\n          <Link className=\"btngroup\" to=\"/Medina-arabic/book2/1\">\r\n            book2\r\n          </Link>\r\n          <Link className=\"btngroup\" to=\"/Medina-arabic/book3/1\">\r\n            book3\r\n          </Link>\r\n        </div>\r\n      </>\r\n    )\r\n  } else {\r\n    return (\r\n      <>\r\n        <Link className=\"btn\" to={`/Medina-arabic/${lessontochange}/${strintprev}`}>\r\n          Previous lesson\r\n        </Link>\r\n        <Link className=\"btn\" to={`/Medina-arabic/${lessontochange}/${strintnext}`}>\r\n          Next lesson\r\n        </Link>\r\n        <br />\r\n        <div>\r\n          <Link className=\"btngroup\" to=\"/Medina-arabic/book1/1\">\r\n            book1\r\n          </Link>\r\n          <Link className=\"btngroup\" to=\"/Medina-arabic/book2/1\">\r\n            book2\r\n          </Link>\r\n          <Link className=\"btngroup\" to=\"/Medina-arabic/book3/1\">\r\n            book3\r\n          </Link>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Btnchangelesson\r\n","import Flashcard from \"./Flashcard\"\r\nimport book2 from \"../lesson2.json\"\r\nimport React, { useState, useEffect } from \"react\"\r\n// import { useParams } from \"react-router-dom\"\r\n\r\nconst maxval = Math.max.apply(\r\n  Math,\r\n  book2.map(function (o) {\r\n    return o.Lesson\r\n  })\r\n)\r\nexport default function Book2list(props) {\r\n  // console.log(props)\r\n  let [myid, setmyid] = useState(1)\r\n  // const NextLesson = () => {\r\n  //   if (myid < maxval) {\r\n  //     setmyid(myid + 1)\r\n  //   } else {\r\n  //   }\r\n  //   // Flashcardlist()\r\n  // }\r\n  // const PreviousLesson = () => {\r\n  //   if (myid > 1) {\r\n  //     setmyid(myid - 1)\r\n  //   } else {\r\n  //   }\r\n  // }\r\n\r\n  if (props.urlid === true && myid !== props.id) {\r\n    setmyid(props.id)\r\n  }\r\n  let filteredArray = book2.filter((obj) => obj.Lesson === myid)\r\n  // .map((obj) => obj.id)\r\n\r\n  const [flashcards, setflashcards] = useState(SampleFlashcard)\r\n  useEffect(() => {\r\n    // console.log(\"Sectond\", myid)\r\n    setflashcards(\r\n      filteredArray.map((questionItem, index) => {\r\n        const answer = questionItem.English\r\n        // multiple choice options\r\n        // const option = [questionItem.Arabic, questionItem.English]\r\n        return {\r\n          id: `${index}`,\r\n          question: questionItem.Arabic,\r\n          answer: answer,\r\n          options: [],\r\n        }\r\n      })\r\n    )\r\n  }, [myid])\r\n\r\n  // console.log(props.id)\r\n  // console.log(filteredArray)\r\n  return (\r\n    <>\r\n      {/* <button onClick={PreviousLesson}>Previous</button>\r\n      <button onClick={NextLesson}>Next</button> */}\r\n      <h1>\r\n        Lesson {myid} / {props.id}\r\n      </h1>\r\n      {/* <Testing id={myid} /> */}\r\n      <div className=\"card-grid\">\r\n        {flashcards.map((flashcard) => {\r\n          return <Flashcard flashcard={flashcard} key={flashcard.id} />\r\n        })}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst SampleFlashcard = [\r\n  {\r\n    id: 1,\r\n    question: \"what is 2 + 3\",\r\n    answer: \"4\",\r\n    options: [\"2\", \"3\", \"4\", \"5\"],\r\n  },\r\n  {\r\n    id: 2,\r\n    question: \"question 2\",\r\n    answer: \"answer\",\r\n    options: [\"answer\", \"3\", \"4\", \"5\"],\r\n  },\r\n]\r\n","import Flashcard from \"./Flashcard\"\r\nimport book3 from \"../lesson3.json\"\r\nimport React, { useState, useEffect } from \"react\"\r\n// import { useParams } from \"react-router-dom\"\r\n\r\nconst maxval = Math.max.apply(\r\n  Math,\r\n  book3.map(function (o) {\r\n    return o.Lesson\r\n  })\r\n)\r\nexport default function Book3list(props) {\r\n  // console.log(props)\r\n  let [myid, setmyid] = useState(1)\r\n  // const NextLesson = () => {\r\n  //   if (myid < maxval) {\r\n  //     setmyid(myid + 1)\r\n  //   } else {\r\n  //   }\r\n  //   // Flashcardlist()\r\n  // }\r\n  // const PreviousLesson = () => {\r\n  //   if (myid > 1) {\r\n  //     setmyid(myid - 1)\r\n  //   } else {\r\n  //   }\r\n  // }\r\n\r\n  if (props.urlid === true && myid !== props.id) {\r\n    setmyid(props.id)\r\n  }\r\n  let filteredArray = book3.filter((obj) => obj.Lesson === myid)\r\n  // .map((obj) => obj.id)\r\n\r\n  const [flashcards, setflashcards] = useState(SampleFlashcard)\r\n  useEffect(() => {\r\n    // console.log(\"Sectond\", myid)\r\n    setflashcards(\r\n      filteredArray.map((questionItem, index) => {\r\n        const answer = questionItem.English\r\n        // multiple choice options\r\n        // const option = [questionItem.Arabic, questionItem.English]\r\n        return {\r\n          id: `${index}`,\r\n          question: questionItem.Arabic,\r\n          answer: answer,\r\n          options: [],\r\n        }\r\n      })\r\n    )\r\n  }, [myid])\r\n\r\n  // console.log(props.id)\r\n  // console.log(filteredArray)\r\n  return (\r\n    <>\r\n      {/* <button onClick={PreviousLesson}>Previous</button>\r\n      <button onClick={NextLesson}>Next</button> */}\r\n      <h1>\r\n        Lesson {myid} / {props.id}\r\n      </h1>\r\n      {/* <Testing id={myid} /> */}\r\n      <div className=\"card-grid\">\r\n        {flashcards.map((flashcard) => {\r\n          return <Flashcard flashcard={flashcard} key={flashcard.id} />\r\n        })}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst SampleFlashcard = [\r\n  {\r\n    id: 1,\r\n    question: \"what is 2 + 3\",\r\n    answer: \"4\",\r\n    options: [\"2\", \"3\", \"4\", \"5\"],\r\n  },\r\n  {\r\n    id: 2,\r\n    question: \"question 2\",\r\n    answer: \"answer\",\r\n    options: [\"answer\", \"3\", \"4\", \"5\"],\r\n  },\r\n]\r\n","import React from \"react\"\r\nimport { Link, Switch, Route, useParams, useRouteMatch } from \"react-router-dom\"\r\nimport Flashcardlist from \"../Flashcard/Flashcardlist.js\"\r\nimport Home from \"./Home.js\"\r\n// import styled from \"styled-components\"\r\nimport Topics from \"./Topics.js\"\r\nimport SideNav from \"./SideNav.js\"\r\nimport Flip from \"./Flip.js\"\r\nimport Btnchangelesson from \"./Btnchangelesson.js\"\r\nimport Book2list from \"../Flashcard/book2list.js\"\r\nimport Book3list from \"../Flashcard/book3list.js\"\r\n// import book1 from \"../book1.json\"\r\n\r\n// const Container = styled.div`\r\n//   background: darkred;\r\n//   /* make this a fixed navbar at the top, with fixed height */\r\n//   position: fixed;\r\n//   top: 0;\r\n//   right: 0;\r\n//   left: 0;\r\n//   height: 64px;\r\n//   /* add a nice shadow effect */\r\n//   z-index: 1;\r\n//   box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\r\n//   /* center the inner container */\r\n//   display: flex;\r\n//   justify-content: center;\r\n// `\r\n\r\n// const Content = styled.div`\r\n//   background: red;\r\n\r\n//   /* layout children horizontally */\r\n//   display: flex;\r\n//   justify-content: space-between;\r\n//   /* as wide as it can be, but not too wide */\r\n//   width: 100%;\r\n//   max-width: 480px;\r\n// `\r\n\r\n// const SideNav = styled.div`\r\n//   background: yellow;\r\n//   /* always show on mobile but can be tucked away;\r\n//      fixed width and add transition */\r\n//   display: block;\r\n//   width: 300px;\r\n//   transition: left 200ms ease-in-out;\r\n//   /* set it on the side */\r\n//   position: fixed;\r\n//   top: 0;\r\n//   bottom: 0;\r\n//   left: ${(p) => (p.show ? `0` : `-100%`)};\r\n//   /* hide on larger screens */\r\n//   @media screen and (min-width: 600px) {\r\n//     display: none;\r\n//   }\r\n// `\r\n\r\n// const Logo = styled.div``\r\n\r\n// const TopNav = styled.div`\r\n//   display: none;\r\n//   /* show on larger screens */\r\n//   @media screen and (min-width: 600px) {\r\n//     display: block;\r\n//   }\r\n// `\r\n\r\n// const MobileMenuButton = styled.div`\r\n//   display: block;\r\n//   padding: 6px;\r\n//   border: 2px solid white;\r\n//   /* hide on larger screens */\r\n//   @media screen and (min-width: 600px) {\r\n//     display: none;\r\n//   }\r\n// `\r\n\r\nexport default function Topnav() {\r\n  return (\r\n    <>\r\n      <nav className=\"topnav\">\r\n        <Link className=\"navitem\" to=\"/\">\r\n          Home\r\n        </Link>\r\n        <Link className=\"navitem\" to=\"/Medina-arabic\">\r\n          Medina Arabic\r\n        </Link>\r\n        <Link className=\"navitem\" to=\"/topics\">\r\n          Topics\r\n        </Link>\r\n      </nav>\r\n\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Flip />\r\n        </Route>\r\n        <Route exact path=\"/Medina-arabic\">\r\n          <MedinaArabic />\r\n        </Route>\r\n        <Route path=\"/topics\">\r\n          <Topics />\r\n        </Route>\r\n        <Route path=\"/Medina-arabic/book1/:id\">\r\n          <Child />\r\n        </Route>\r\n        <Route path=\"/Medina-arabic/book2/:id\">\r\n          <Child2 />\r\n        </Route>\r\n        <Route path=\"/Medina-arabic/book3/:id\">\r\n          <Child3 />\r\n        </Route>\r\n      </Switch>\r\n      {/* <button onClick={() => setmyid(myid + 1)}>Click</button> */}\r\n    </>\r\n  )\r\n}\r\n\r\n// function Home() {\r\n//   return (\r\n//     <>\r\n//       <h2>Home</h2>\r\n//     </>\r\n//   )\r\n// }\r\n\r\nfunction MedinaArabic() {\r\n  // let match = useRouteMatch()\r\n  return (\r\n    <>\r\n      <Switch></Switch>\r\n      <main>\r\n        <SideNav page=\"main\" />\r\n        <div className=\"content\">\r\n          <h2>MedinaArabic</h2>\r\n          <Btnchangelesson />\r\n\r\n          {/* <div className=\"container\">\r\n            <Flashcardlist urlid={false} book={1} />\r\n          </div> */}\r\n        </div>\r\n      </main>\r\n    </>\r\n  )\r\n}\r\n// const maxval = Math.max.apply(\r\n//   Math,\r\n//   book1.map(function (o) {\r\n//     return o.Lesson\r\n//   })\r\n// )\r\n\r\nfunction Child() {\r\n  let { id } = useParams()\r\n  let match = useRouteMatch()\r\n  const lessontochange = match.url.includes(\"book2\")\r\n    ? \"book2\"\r\n    : match.url.includes(\"book3\")\r\n    ? \"book3\"\r\n    : \"book1\"\r\n\r\n  // let changeid = id\r\n  //   return <Flashcardlist id={id} />\r\n  let intid = parseInt(id)\r\n  // //let strintnext = intid < 23 ? intid + 1 : intid\r\n  // // let strintprev = intid > 1 ? intid - 1 : intid\r\n  // console.log(\"Param\", id)\r\n  // const NextLesson = () => {\r\n  //   if (id < maxval) {\r\n  //     changeid += 1\r\n  //   } else {\r\n  //   }\r\n  //   // Flashcardlist()\r\n  // }\r\n  // const PreviousLesson = () => {\r\n  //   if (id > 1) {\r\n  //     changeid -= 1\r\n  //   } else {\r\n  //   }\r\n  // }\r\n  return (\r\n    <main className=\"\">\r\n      <SideNav />\r\n\r\n      <div className=\"content\">\r\n        <h1>Book 1</h1>\r\n        <Btnchangelesson />\r\n        <Flashcardlist id={intid} urlid={true} />\r\n        {/* <Flashcardlist id={intid} urlid={true} book={} /> */}\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nfunction Child2() {\r\n  let { id } = useParams()\r\n  let intid = parseInt(id)\r\n  return (\r\n    <main className=\"\">\r\n      <SideNav />\r\n      <div className=\"content\">\r\n        <h1>Book 2</h1>\r\n        <Btnchangelesson />\r\n        <Book2list id={intid} urlid={true} />\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nfunction Child3() {\r\n  let { id } = useParams()\r\n  let intid = parseInt(id)\r\n  return (\r\n    <main className=\"\">\r\n      <SideNav />\r\n      <div className=\"content\">\r\n        <h1>Book 3</h1>\r\n        <Btnchangelesson />\r\n        <Book3list id={intid} urlid={true} />\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n// function Listnav() {\r\n//   const list = []\r\n//   const urlid = useParams()\r\n//   console.log(urlid)\r\n//   let link = \"\"\r\n//   for (let i = 1; i < 24; i++) {\r\n//     link = \"/Medina-arabic/\" + i\r\n//     if (urlid.id == i) {\r\n//       list.push(\r\n//         <a className=\"active\" href={link}>\r\n//           Lesson {i}\r\n//         </a>\r\n//       )\r\n//     } else {\r\n//       list.push(<a href={link}>Lesson {i}</a>)\r\n//     }\r\n//   }\r\n//   return <nav className=\"sidebar\">{list}</nav>\r\n// }\r\n// //////////////////////////////////////////////////////////\r\n// // //////////////////////////////////////////////////////////\r\n// //////////////////////////////////////////////////////////\r\n//////////////////////////////////////////////////////////\r\n//////////////////////////////////////////////////////////\r\n//////////////////////////////////////////////////////////\r\n//////////////////////////////////////////////////////////\r\n//////////////////////////////////////////////////////////\r\n//////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n//////////////////////////////////////////////////////////\r\n","// import React, { useState, useEffect } from \"react\"\nimport React from \"react\"\n// import Flashcardlist from \"./Flashcard/Flashcardlist.js\"\nimport Topnav from \"./Navigation/Topnav.js\"\nimport \"./index.css\"\n// import { BrowserRouter as Router, Switch, Route, Link, useRouteMatch, useParams } from \"react-router-dom\"\n// import styled from \"styled-components\"\n\n// const Container = styled.nav`\n//   background: darkred;\n//   /* make this a fixed navbar at the top, with fixed height */\n//   position: fixed;\n//   top: 0;\n//   right: 0;\n//   left: 0;\n//   height: 64px;\n//   /* add a nice shadow effect */\n//   z-index: 1;\n//   box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n//   /* center the inner container */\n//   display: flex;\n//   justify-content: center;\n// `\n\nfunction App() {\n  return (\n    // <Container>\n    <Topnav />\n    // </Container>\n  )\n  // return <Mydata />\n}\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}